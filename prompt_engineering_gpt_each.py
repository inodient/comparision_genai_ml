# -*- coding: utf-8 -*-
"""paper_prompt_engineering_GPT_each

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Hjhm3IjX2hmnmuvbGSF4qe_0q9tbATet

###. Install Openai
"""

!pip install openai

"""### . Import library"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# import seaborn as sns
# sns.set( style="whitegrid" )
import math

import openai
openai.api_key = ""

"""### . Set Prompt"""

##### GPT-P1 #####
GPT_P1 = """I want you to act as an expert of economist.
How do you feel about this headline.

{headline}

Answer in one token : positive or negative.
"""

##### GPT-P2 #####
GPT_P2 = """I want you to act as an expert of economist.
Classify the sentiment based only on the headline.

{headline}

Answer in one token : positive or negative.
"""

##### GPT-P3 #####
GPT_P3 = """I want you to act as a sentiment analysis model trained on financial news headlines.
Classify the sentiment based only on the headline.

{headline}

Answer in one token : positive or negative.
"""

##### GPT-P4 #####
GPT_P4 = """I want you to act as an expert at KR-FinBERT.
Classify the sentiment based only on the headline.

{headline}

Answer in one token : positive or negative.
"""

##### GPT-P1N #####
GPT_P1N = """I want you to act as an expert of economist.
How do you feel about this headline.

{headline}

Answer in one 2 digit number : positive represents by '1', negative represents by '-1', neutral represents by '0'
"""

##### GPT-P2N #####
GPT_P2N = """I want you to act as an expert of economist.
Classify the sentiment based only on the headline.

{headline}

Answer in one 2 digit number : positive represents by '1', negative represents by '-1', neutral represents by '0'
"""

##### GPT-P3N #####
GPT_P3N = """I want you to act as a sentiment analysis model trained on financial news headlines.
Classify the sentiment based only on the headline.

{headline}

Answer in one 2 digit number : positive represents by '1', negative represents by '-1', neutral represents by '0'
"""

##### GPT-P4N #####
GPT_P4N = """I want you to act as an expert at KR-FinBERT.
Based only on the headline

{headline}

will you buy, sell, or hold in the short term?

Answer in one 2 digit number : positive represents by '1', negative represents by '-1', neutral represents by '0'
"""

##### GPT-P1C #####
GPT_P1C = """I want you to act as an expert of economist.
How do you feel about this headline with entry content of article

{article}

Answer in one token : positive or negative.
"""

##### GPT-P2C #####
GPT_P2C = """I want you to act as an expert of economist.
Classify the sentiment based only on the headline with entry content of article.

{article}

Answer in one token : positive or negative.
"""

##### GPT-P3C #####
GPT_P3C = """I want you to act as a sentiment analysis model trained on financial news headlines.
Classify the sentiment based only on the headline with entry content of article.

{article}

Answer in one token : positive or negative.
"""

##### GPT-P4C #####
GPT_P4C = """I want you to act as an expert at KR-FinBERT.
Classify the sentiment based only on the headline with entry content of article.

{article}

Answer in one token : positive or negative.
"""

##### GPT-P1NC #####
GPT_P1NC = """I want you to act as an expert of economist.
How do you feel about this headline with entry of content article.

{article}

Answer in one 2 digit number : positive represents by '1', negative represents by '-1', neutral represents by '0'
"""

##### GPT-P2NC #####
GPT_P2NC = """I want you to act as an expert of economist.
Classify the sentiment based only on the headline with entry content of article.

{article}

Answer in one 2 digit number : positive represents by '1', negative represents by '-1', neutral represents by '0'
"""

##### GPT-P3NC #####
GPT_P3NC = """I want you to act as a sentiment analysis model trained on financial news headlines and contents.
Classify the sentiment based only on the headline with entry content of article.

{article}

Answer in one 2 digit number : positive represents by '1', negative represents by '-1', neutral represents by '0'
"""

##### GPT-P4NC #####
GPT_P4NC = """I want you to act as an expert at KR-FinBERT.
Based only on the headline with entry content of article.

{article}

will you buy, sell, or hold in the short term?

Answer in one 2 digit number : positive represents by '1', negative represents by '-1', neutral represents by '0'
"""

"""###. Define Prompting"""

def ask_chatgpt(prompt):
  response = openai.chat.completions.create(
      model="gpt-4-turbo",
      # model = "gpt-3.5-turbo",
      temperature = 0.2,
      messages=[
          {
              "role" : "user",
              "content" : prompt
          }
      ]
  )
  answer = response.choices[0].message.content
  return answer

def ask_to_gpt( sentence ):
  prompt = GPT_P4C + sentence
  # print( prompt )
  res = ask_chatgpt( prompt )
  return res

"""###. Load Plain News Data / ETL"""

news = pd.read_csv( "/content/drive/MyDrive/Colab Notebooks/Paper/wide_news/news_extracted.csv" )
# news = pd.read_csv( "/content/drive/MyDrive/Colab Notebooks/Paper/wide_news/news_GPT_P3C_temperature_0.2_GPT_4_binary_C3.csv" )

"""###. Tag Sentiment"""

news["sentiment"] = "-"

for d in news["date"].unique():

  daily_news = news[news["date"]==d]

  for i in range( 0, daily_news["date"].count() ):

    if daily_news.iloc[i, -1] == "-":

      title = daily_news.iloc[i, 4]
      # content = ""
      content = daily_news.iloc[i, 16]

      sentence = title + "\n\n" + content

      sentiment = ask_to_gpt( sentence )
      news.loc[daily_news.index[i], "sentiment"] = sentiment

      print( d," : ", title, " : ", sentiment  )
      # print( d," : ", i, " : ", sentiment )

"""###. Insert Sentiment Result"""

news.to_csv( "/content/drive/MyDrive/Colab Notebooks/Paper/wide_news/news_GPT_P4C_temperature_0.2_GPT_4_binary_C3.csv", index=False )

news = pd.read_csv( "/content/drive/MyDrive/Colab Notebooks/Paper/wide_news/news_GPT_P4C_temperature_0.2_GPT_4_binary_C3.csv" )

news



news.groupby("sentiment")["sentiment"].count()















